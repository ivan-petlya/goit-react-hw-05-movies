{"version":3,"file":"static/js/763.b3147477.chunk.js","mappings":"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","sources":["components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/ThemoviedbApi/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 16px 0 8px 0;\n\n  text-decoration: none;\n  font-size: 16px;\n  text-transform: uppercase;\n\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { StyledLink } from './BackButton.styled';\nimport { useLocation } from 'react-router-dom';\nexport const BackButton = ({ children }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return <StyledLink to={backLinkHref}>{children}</StyledLink>;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 0;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 5px 20px;\n`;\n\nexport const MovieGenres = styled.ul`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const MovieAdditionalBox = styled.div`\n  padding: 16px 0;\n  border-bottom: 1px solid black;\n  text-align: center;\n`;\n\nexport const MovieAdditionalTitle = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const MovieAdditionalList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n  font-weight: 500;\n  font-size: 16px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport GetApi from 'services/ThemoviedbApi/Api';\nimport { BackButton } from 'components/BackButton/BackButton';\nimport {\n  MovieBox,\n  MovieImg,\n  MovieInfo,\n  MovieGenres,\n  MovieAdditionalBox,\n  MovieAdditionalTitle,\n  MovieAdditionalList,\n  Link,\n} from './MovieDetails.styled';\n\nconst BASE_IMAGE_URL = `https://image.tmdb.org/t/p/w500`;\nconst PlACEHOLDER_POSTER_URL = `https://placehold.jp/200x300.png`;\n\nconst MovieDatails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const { pathname, search } = useLocation();\n  const fromPage = `${pathname}${search}`;\n\n  useEffect(() => {\n    getMovieById();\n\n    async function getMovieById() {\n      try {\n        const fetchMovie = await GetApi.getMovieById(Number(movieId));\n        setMovie(fetchMovie);\n      } catch (error) {\n        console.log(`something wrong`);\n      }\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n\n  const imagePath = poster_path\n    ? BASE_IMAGE_URL + poster_path\n    : PlACEHOLDER_POSTER_URL;\n\n  const year = release_date ? release_date.slice(0, 4) : `without year`;\n\n  const userScore = () => {\n    return Math.round(vote_average * 10);\n  };\n\n  return (\n    <main>\n      <BackButton> go back</BackButton>\n\n      <MovieBox>\n        <MovieImg src={imagePath} alt={title} width=\"60%\" height=\"60%\" />\n        <MovieInfo>\n          <p>\n            <b>{title}</b>\n            <span>({year})</span>\n          </p>\n          <p>\n            <b>User Score:</b> <i>{userScore()}%</i>\n          </p>\n          <p>\n            <b>Overview: </b>\n            <i>{overview}</i>\n          </p>\n          <p>\n            <b>Genres:</b>\n          </p>\n          <MovieGenres>\n            {genres?.map(({ id, name }) => (\n              <li key={id}>\n                <i>{name}</i>\n              </li>\n            ))}\n          </MovieGenres>\n        </MovieInfo>\n      </MovieBox>\n      <MovieAdditionalBox>\n        <MovieAdditionalTitle> Additional infomation</MovieAdditionalTitle>\n        <MovieAdditionalList>\n          <li>\n            <Link to=\"cast\" state={{ from: fromPage }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: fromPage }}>\n              reviews\n            </Link>\n          </li>\n        </MovieAdditionalList>\n      </MovieAdditionalBox>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDatails;\n","// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews\n// for tranding\n// const URL_TRANDING = 'https://api.themoviedb.org/3/trending/movie/day';\n// // for search by name\n// const URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\n// // for details\n// const URL_FILM_ADD_INFO = 'https://api.themoviedb.org/3/movie/';\n\nimport axios from 'axios';\nconst API_KEY = '97c31631b31361f75213aa46907a2e0a';\n\nconst apiCase = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function getTrendingMovies() {\n  const response = await apiCase.get('trending/movie/day');\n  const trendingMovies = response.data.results;\n  if (!trendingMovies.length) {\n    throw new Error(`Sorry, there are no movies.`);\n  }\n  return trendingMovies;\n}\n\nasync function getMovieById(id) {\n  const { data } = await apiCase.get(`movie/${id}`);\n  return data;\n}\n\nasync function searchMovieQuery(query) {\n  const { response } = await apiCase.get(`search/movie/?query=${query}`);\n  const searchMovies = response.data.results;\n  if (!searchMovies.length) {\n    throw new Error('Nothing was found for your request');\n  }\n  return searchMovies;\n}\n\nasync function fetchSearchMovies(query) {\n  const response = await apiCase.get(`search/movie?query=${query}`);\n\n  const searchMovies = response.data.results;\n\n  if (!searchMovies.length) {\n    throw new Error(\n      `Sorry, there are no movies matching your search query. Please try again.`\n    );\n  }\n\n  return searchMovies;\n}\n\nasync function getMovieCredits(id) {\n  const response = await apiCase.get(`movie/${id}/credits`);\n  const cast = response.data.cast;\n  if (!cast.length) {\n    throw new Error('cast not found');\n  }\n  return cast;\n}\n\nasync function getMovieReviews(id) {\n  const response = await apiCase.get(`movie/${id}/reviews`);\n  const reviews = response.data.results;\n  if (!reviews) {\n    throw new Error(`reviews not found`);\n  }\n  return reviews;\n}\n\nconst GetApi = {\n  getTrendingMovies,\n  getMovieById,\n  searchMovieQuery,\n  fetchSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default GetApi;\n"],"names":["StyledLink","styled","Link","BackButton","children","backLinkHref","useLocation","state","from","to","MovieBox","MovieImg","MovieInfo","MovieGenres","MovieAdditionalBox","MovieAdditionalTitle","MovieAdditionalList","NavLink","movieId","useParams","useState","movie","setMovie","pathname","search","fromPage","useEffect","GetApi","Number","fetchMovie","console","log","getMovieById","poster_path","title","vote_average","overview","genres","release_date","imagePath","year","slice","src","alt","width","height","Math","round","map","id","name","Suspense","fallback","apiCase","axios","baseURL","params","api_key","language","getTrendingMovies","get","response","trendingMovies","data","results","length","Error","searchMovieQuery","query","searchMovies","fetchSearchMovies","getMovieCredits","cast","getMovieReviews","reviews"],"sourceRoot":""}